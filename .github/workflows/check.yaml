on: [push, pull_request]

name: check

jobs:
  check:
    runs-on: ${{ matrix.config.os }}

    name: ${{ matrix.config.os }} (${{ matrix.config.r }})

    strategy:
      fail-fast: false
      matrix:
        config:
          - {os: ubuntu-latest, r: 'release'}

    env:
      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}
      NOT_CRAN: true
      R_KEEP_PKG_SOURCE: yes

    steps:
      - uses: actions/checkout@v3

      - uses: r-lib/actions/setup-pandoc@v2

      - uses: r-lib/actions/setup-r@v2
        with:
          r-version: ${{ matrix.config.r }}
          extra-repositories: 'https://mc-stan.org/r-packages/'
          http-user-agent: ${{ matrix.config.http-user-agent }}
          use-public-rspm: true

      - uses: r-lib/actions/setup-r-dependencies@v2
        with:
          extra-packages: |
            any::rcmdcheck
            any::cmdstanr
            any::rmarkdown
            any::knitr
            local::.
          needs: check
          cache-version: 2

      - name: Cache CmdStan build
        uses: actions/cache@v3
        with:
          path: ~/.cmdstan
          key: ${{ runner.os }}-cmdstan-2

      - name: Install (or reuse) CmdStan
        shell: Rscript {0}
        run: |
          cmdstanr::check_cmdstan_toolchain(fix = TRUE)
      
          ## If the cache is present, point CmdStanR to it ---------------------------
          if (dir.exists("~/.cmdstan")) {
            cached <- fs::dir_ls("~/.cmdstan", type = "directory", recurse = FALSE)
            if (length(cached)) cmdstanr::set_cmdstan_path(cached[1])
          }
      
          ## Install CmdStan if nothing usable was found ----------------------------
          if (is.null(cmdstanr::cmdstan_version(error_on_NA=FALSE))) {
            cmdstanr::install_cmdstan()
          }

      - uses: r-lib/actions/check-r-package@v2
        with:
          upload-snapshots: true
