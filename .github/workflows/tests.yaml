# Workflow derived from https://github.com/r-lib/actions/tree/v2/examples
# Need help debugging build failures? Start at https://github.com/r-lib/actions#where-to-find-help
on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

name: tests

jobs:
  tests:
    runs-on: ${{ matrix.config.os }}

    name: ${{ matrix.config.os }} (${{ matrix.config.r }})

    strategy:
      fail-fast: false
      matrix:
        config:
          - {os: macos-latest,   r: 'release'}
          - {os: windows-latest, r: 'release'}
          - {os: ubuntu-latest,   r: 'devel', http-user-agent: 'release'}
          - {os: ubuntu-latest,   r: 'release'}
          - {os: ubuntu-latest,   r: 'oldrel-1'}

    env:
      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}
      R_KEEP_PKG_SOURCE: yes

    steps:
      - uses: actions/checkout@v4

      - uses: r-lib/actions/setup-pandoc@v2

      - uses: r-lib/actions/setup-r@v2
        with:
          r-version: ${{ matrix.config.r }}
          extra-repositories: 'https://mc-stan.org/r-packages/'
          http-user-agent: ${{ matrix.config.http-user-agent }}
          use-public-rspm: true

      - uses: r-lib/actions/setup-r-dependencies@v2
        with:
          extra-packages: |
            any::cmdstanr
            any::testthat
            any::devtools
            local::.
            

      # --- (Windows only): ensure Rtools44 paths on PATH ---
      - name: Add Rtools to PATH
        if: runner.os == 'Windows'
        shell: powershell
        run: |
          $paths = @(
            'C:\rtools44\usr\bin',
            'C:\rtools44\ucrt64\bin'
          )
          $paths | ForEach-Object {
            if (Test-Path $_) {
              echo "Adding $_ to PATH"
              echo $_ >> $env:GITHUB_PATH
            } else {
              Write-Host "Path missing (ignore if not needed): $_"
            }
          }

      - name: Verify toolchain (Windows)
        if: runner.os == 'Windows'
        shell: powershell
        run: |
            where make
            where g++
            g++ --version
            make --version

      - name: Install CmdStan
        shell: Rscript {0}
        run: |
          cmdstanr::check_cmdstan_toolchain(fix = TRUE)
          cmdstanr::install_cmdstan()

      - name: Run tests
        run: |
          devtools::test()
        shell: Rscript {0}
